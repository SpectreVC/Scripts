
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local RunService = game:GetService("RunService")

local Window = OrionLib:MakeWindow({Name = "VortexHub| Arsenal", HidePremium = false, IntroText = "VortexHub", SaveConfig = true, ConfigFolder = "OrionTest"})

OrionLib:MakeNotification({
    Name = "VortexHub",
    Content = "VortexHub Hub Loaded",
    Image = "rbxassetid://4483345998",
    Time = 5
})

-- Tabs

local CombatTab = Window:MakeTab({
    Name = "Combat",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local VisualsTab = Window:MakeTab({
    Name = "Visuals",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local GameTab = Window:MakeTab({
    Name = "Game",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Values


_G.Aimbot = false
_G.SilentAim = false
_G.Noslowdown = false
_G.Speed = false
_G.SpeedSlider = 25
_G.Cooldown1 = 1
_G.ESPNew = false
_G.ESPOld = false
_G.NameTags = false
_G.FpsBoost = false
_G.Aimbot = false
_G.Aimbot2 = false

-- Functions
local function AimbotFunction2()
local Players = game:GetService('Players')
local player = Players.LocalPlayer
local camera = game.Workspace.CurrentCamera
local mouse = player:GetMouse()

local Drawing = Drawing or game:GetService("Drawing")

local function createCircle()
    local circle = Drawing.new("Circle")
    circle.Position = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)
    circle.Radius = 75
    circle.Filled = true
    circle.Color = Color3.fromHSV(0, 1, 1)
    circle.Visible = true
    circle.Transparency = 0
    circle.NumSides = 100
    circle.Thickness = 2
    return circle
end

local FOVCircle = createCircle()

local function isPlayerInCircle(player, circlePosition, circleRadius)
    local character = player.Character
    if not character or not character:FindFirstChild("HumanoidRootPart") then
        return false
    end

    local humanoidRootPart = character.HumanoidRootPart
    local targetPosition, onScreen = camera:WorldToScreenPoint(humanoidRootPart.Position)

    if onScreen then
        local distance = (Vector2.new(targetPosition.X, targetPosition.Y) - circlePosition).magnitude
        return distance <= circleRadius
    end

    return false
end

local function rainbowColor(t)
    return Color3.fromHSV(t % 1, 1, 1)
end

local function TriggerBot()
    local circlePosition = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)
    local circleRadius = FOVCircle.Radius
    for _, enemyPlayer in pairs(Players:GetPlayers()) do
        if enemyPlayer ~= player and enemyPlayer.TeamColor ~= player.TeamColor then
            if isPlayerInCircle(enemyPlayer, circlePosition, circleRadius) then
                print("Enemy detected within FOV! Shoot!")

                local targetPosition = enemyPlayer.Character.HumanoidRootPart.Position
                camera.CFrame = CFrame.new(camera.CFrame.Position, targetPosition)
            end
        end
    end
end

game:GetService("RunService").RenderStepped:Connect(function(deltaTime)
    FOVCircle.Position = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)
    FOVCircle.Radius = 75
    FOVCircle.Color = rainbowColor(workspace.DistributedGameTime)
    TriggerBot()
end)

end



local function AimbotFunction()
local Players = game:GetService('Players')
local player = Players.LocalPlayer
local camera = game.Workspace.CurrentCamera
local mouse = player:GetMouse()

local Drawing = Drawing or game:GetService("Drawing")

local function createCircle()
    local circle = Drawing.new("Circle")
    circle.Position = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)
    circle.Radius = 75
    circle.Filled = true
    circle.Color = Color3.fromHSV(0, 1, 1)
    circle.Visible = true
    circle.Transparency = 0.5
    circle.NumSides = 100
    circle.Thickness = 2
    return circle
end

local FOVCircle = createCircle()

local function isPlayerInCircle(player, circlePosition, circleRadius)
    local character = player.Character
    if not character or not character:FindFirstChild("HumanoidRootPart") then
        return false
    end

    local humanoidRootPart = character.HumanoidRootPart
    local targetPosition, onScreen = camera:WorldToScreenPoint(humanoidRootPart.Position)

    if onScreen then
        local distance = (Vector2.new(targetPosition.X, targetPosition.Y) - circlePosition).magnitude
        return distance <= circleRadius
    end

    return false
end

local function rainbowColor(t)
    return Color3.fromHSV(t % 1, 1, 1)
end

local function TriggerBot()
    local circlePosition = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)
    local circleRadius = FOVCircle.Radius
    for _, enemyPlayer in pairs(Players:GetPlayers()) do
        if enemyPlayer ~= player and enemyPlayer.TeamColor ~= player.TeamColor then
            if isPlayerInCircle(enemyPlayer, circlePosition, circleRadius) then
                print("Enemy detected within FOV! Shoot!")

                local targetPosition = enemyPlayer.Character.HumanoidRootPart.Position
                camera.CFrame = CFrame.new(camera.CFrame.Position, targetPosition)
            end
        end
    end
end

game:GetService("RunService").RenderStepped:Connect(function(deltaTime)
    FOVCircle.Position = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)
    FOVCircle.Radius = 75
    FOVCircle.Color = rainbowColor(workspace.DistributedGameTime)
    TriggerBot()
end)

end


local function FpsBoostFunction()

local allParts = game:GetService("Workspace"):GetDescendants()


for _, part in pairs(allParts) do
    if part:IsA("BasePart") then
        part.Material = Enum.Material.Plastic
    end
end

end


local function infjumpFunction()

game:GetService("UserInputService").JumpRequest:connect(function()
	if _G.InfJump then
		game:GetService"Players".LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
	end
end)

end


local function NameTagsFunction()
local player = game.Players.LocalPlayer
local myTeam = player.Team

-- Function to create a small red name tag billboard on the player's torso
local function createSmallNameTagBillboard(player)
    local torso = player.Character:FindFirstChild("HumanoidRootPart")
    
    if torso then
        local billboard = Instance.new("BillboardGui")
        billboard.Size = UDim2.new(0, 50, 0, 20) -- Smaller size
        billboard.StudsOffset = Vector3.new(0, 3, 0)
        billboard.AlwaysOnTop = true -- Make the billboard visible through walls
        
        local nameLabel = Instance.new("TextLabel")
        nameLabel.Size = UDim2.new(1, 0, 1, 0)
        nameLabel.Text = player.Name
        nameLabel.TextColor3 = Color3.new(1, 0, 0) -- Red color
        nameLabel.Font = Enum.Font.SourceSans -- Specify the font
        nameLabel.TextSize = 10 -- Smaller text size
        nameLabel.BackgroundTransparency = 1 -- Make the background transparent
        nameLabel.Parent = billboard
        
        billboard.Parent = torso
    end
end

-- Function to check teams and update small name tag billboards
local function updateSmallNameTags()
    for _, otherPlayer in pairs(game.Players:GetPlayers()) do
        if otherPlayer ~= player then
            if otherPlayer.Team ~= myTeam then
                createSmallNameTagBillboard(otherPlayer)
            else
                local billboard = otherPlayer.Character:FindFirstChild("HumanoidRootPart"):FindFirstChild("BillboardGui")
                if billboard then
                    billboard:Destroy()
                end
            end
        end
    end
end

-- Repeat the update every 5 seconds
while wait(1) do
    updateSmallNameTags()
end


end

local function ESPNewFunction()
-- Get your player and team
local player = game.Players.LocalPlayer
local myTeam = player.Team

-- Function to create a larger solid red box billboard on the player's torso
local function createSolidRedBoxBillboard(player)
    local torso = player.Character:FindFirstChild("HumanoidRootPart")
    
    if torso then
        local billboard = Instance.new("BillboardGui")
        billboard.Size = UDim2.new(4, 0, 4, 0) -- Larger size
        billboard.AlwaysOnTop = true -- Make the billboard visible through walls
        
        local frame = Instance.new("Frame")
        frame.Size = UDim2.new(1, 0, 1.5, 0) -- Thicker bottom
        frame.Position = UDim2.new(0, 0, -torso.Size.Y / 2, 0) -- Adjusted position based on torso height
        frame.BackgroundColor3 = Color3.new(1, 0, 0) -- Solid red color
        frame.BackgroundTransparency = 0 -- No transparency
        
        frame.Parent = billboard
        billboard.Parent = torso
    end
end

-- Function to check teams and update billboards
local function updateBillboards()
    for _, otherPlayer in pairs(game.Players:GetPlayers()) do
        if otherPlayer ~= player then
            if otherPlayer.Team ~= myTeam then
                createSolidRedBoxBillboard(otherPlayer)
            else
                local billboard = otherPlayer.Character:FindFirstChild("HumanoidRootPart"):FindFirstChild("BillboardGui")
                if billboard then
                    billboard:Destroy()
                end
            end
        end
    end
end

-- Repeat the update every 5 seconds
while wait(1) do
    updateBillboards()
end
end


local function ESPOldFunction()

local Players = game:GetService("Players")

-- Function to create a thicker rainbow outline at the torso for a given player
local function createThickerTorsoRainbowOutline(player)
    local character = player.Character
    local localPlayer = Players.LocalPlayer

    if character and player ~= localPlayer and player.Team ~= localPlayer.Team then
        local torso = character:WaitForChild("HumanoidRootPart")  -- Use the torso as the Adornee
        -- Create a BillboardGui for the outline
        local billboardGui = Instance.new("BillboardGui")
        billboardGui.Adornee = torso
        billboardGui.Size = UDim2.new(1, 0, 2, 0)  -- Adjusted size for better positioning
        billboardGui.StudsOffset = Vector3.new(0, 2, 0)  -- Adjusted offset for better positioning
        billboardGui.AlwaysOnTop = true

        -- Create a frame as the thicker rainbow outline
        local thickerRainbowOutline = Instance.new("Frame")
        thickerRainbowOutline.Size = UDim2.new(1, 15, 1, 15)  -- Make it even thicker
        thickerRainbowOutline.Position = UDim2.new(-0.5, 0, -1, 0)  -- Adjusted position to center on the torso
        thickerRainbowOutline.BackgroundTransparency = 0
        thickerRainbowOutline.BackgroundColor3 = Color3.fromHSV(math.random(), 1, 1)
        thickerRainbowOutline.Parent = billboardGui

        -- Update color over time to create a rainbow effect
        local function updateColor()
            thickerRainbowOutline.BackgroundColor3 = Color3.fromHSV(tick() % 5 / 5, 1, 1)
        end

        -- Update color every 30 seconds
        spawn(function()
            while thickerRainbowOutline.Parent do
                updateColor()
                wait(30)
            end
        end)

        billboardGui.Parent = torso
    end
end

-- Loop through existing players and create thicker torso rainbow outlines
for _, player in pairs(Players:GetPlayers()) do
    createThickerTorsoRainbowOutline(player)
end

-- Event to handle new players joining
Players.PlayerAdded:Connect(function(player)
    createThickerTorsoRainbowOutline(player)
end)

-- Event to handle players leaving
Players.PlayerRemoving:Connect(function(player)
    -- Remove outline when player leaves
    local character = player.Character
    if character then
        local torso = character:FindFirstChild("HumanoidRootPart")
        if torso then
            local billboardGui = torso:FindFirstChild("BillboardGui")
            if billboardGui then
                billboardGui:Destroy()
            end
        end
    end
end)

end



local function AimbotFunction()
local Players = game:GetService('Players')
local player = Players.LocalPlayer
local camera = game.Workspace.CurrentCamera
local mouse = player:GetMouse()

local Drawing = Drawing or game:GetService("Drawing")

local function createCircle()
    local circle = Drawing.new("Circle")
    circle.Position = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)
    circle.Radius = 75
    circle.Filled = true
    circle.Color = Color3.fromHSV(0, 1, 1)
    circle.Visible = true
    circle.Transparency = 0.5
    circle.NumSides = 100
    circle.Thickness = 2
    return circle
end

local FOVCircle = createCircle()

local function isPlayerInCircle(player, circlePosition, circleRadius)
    local playerScreenPos, onScreen = camera:WorldToViewportPoint(player.Character.HumanoidRootPart.Position)
    return onScreen and (Vector2.new(playerScreenPos.X, playerScreenPos.Y) - circlePosition).magnitude <= circleRadius
end

local function rainbowColor(t)
    return Color3.fromHSV(t % 1, 1, 1)
end

local function TriggerBot()
    local circlePosition = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)
    local circleRadius = FOVCircle.Radius
    for _, enemyPlayer in pairs(Players:GetPlayers()) do
        if enemyPlayer ~= player and enemyPlayer.TeamColor ~= player.TeamColor then
            if isPlayerInCircle(enemyPlayer, circlePosition, circleRadius) then
                print("Enemy detected within FOV! Shoot!")

                local targetPosition = enemyPlayer.Character.HumanoidRootPart.Position
                camera.CFrame = CFrame.new(camera.CFrame.Position, targetPosition)
            end
        end
    end
end

game:GetService("RunService").RenderStepped:Connect(function(deltaTime)
    FOVCircle.Position = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)
    FOVCircle.Radius = 75
    FOVCircle.Color = rainbowColor(workspace.DistributedGameTime)
    TriggerBot()
end)
end


local function SpeedFunction()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")

    local function updateSpeed()
        if _G.Speed then
            humanoid.WalkSpeed = _G.SpeedSlider
        else
            humanoid.WalkSpeed = 16 -- Set a default walk speed when not using speed
        end
    end

    local function stopSpeed()
        return not _G.Speed
    end

    while wait() do
        if stopSpeed() then
            break
        end
        updateSpeed()
    end
end

local function NoSlowdownFunction()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")

    local function updateNoSlowdown()
        if _G.Noslowdown then
            humanoid.WalkSpeed = 28
        else
            humanoid.WalkSpeed = 16 -- Set a default walk speed when not using no slowdown
        end
    end

    local function stopNoSlowdown()
        return not _G.Noslowdown
    end

    while wait() do
        if stopNoSlowdown() then
            break
        end
        updateNoSlowdown()
    end
end

local function SilentAimFunction()
    function resizeBodyParts()
        local players = game.Players
        local localPlayer = players.LocalPlayer

        while wait(1) do
            for _, player in pairs(players:GetPlayers()) do
                if player ~= localPlayer and player.Character then
                    local character = player.Character

                    if character:FindFirstChild("RightUpperLeg") then
                        local rightUpperLeg = character.RightUpperLeg
                        rightUpperLeg.CanCollide = false
                        rightUpperLeg.Transparency = 1
                        rightUpperLeg.Size = Vector3.new(21, 21, 21)
                    end

                    if character:FindFirstChild("LeftUpperLeg") then
                        local leftUpperLeg = character.LeftUpperLeg
                        leftUpperLeg.CanCollide = false
                        leftUpperLeg.Transparency = 1
                        leftUpperLeg.Size = Vector3.new(21, 21, 21)
                    end

                    if character:FindFirstChild("HeadHB") then
                        local headHB = character.HeadHB
                        headHB.CanCollide = false
                        headHB.Transparency = 1
                        headHB.Size = Vector3.new(21, 21, 21)
                    end

                    if character:FindFirstChild("HumanoidRootPart") then
                        local humanoidRootPart = character.HumanoidRootPart
                        humanoidRootPart.CanCollide = false
                        humanoidRootPart.Transparency = 1
                        humanoidRootPart.Size = Vector3.new(21, 21, 21)
                    end
                end
            end
        end
    end

    coroutine.resume(coroutine.create(resizeBodyParts))
end

-- Sections

CombatTab:AddToggle({
    Name = "Silent Aim",
    Default = false,
    Callback = function(NewValue)
        _G.SilentAim = NewValue
        if NewValue then
            SilentAimFunction()
        end
    end
})

CombatTab:AddToggle({
    Name = "NoSlowdown",
    Default = false,
    Callback = function(NewValue)
        _G.Noslowdown = NewValue
        if NewValue then
            NoSlowdownFunction()
        end
    end
})

CombatTab:AddToggle({
    Name = "Speed",
    Default = false,
    Callback = function(NewValue)
        _G.Speed = NewValue
        if NewValue then
            SpeedFunction()
        end
    end
})


CombatTab:AddToggle({
    Name = "Aimbot (Buggy)",
    Default = false,
    Callback = function(NewValue)
       _G.Aimbot = NewValue
        if NewValue then
            AimbotFunction()
        end
    end
})

CombatTab:AddToggle({
    Name = "Aimbot (No FOV)",
    Default = false,
    Callback = function(NewValue)
       _G.Aimbot2 = NewValue
        if NewValue then
            AimbotFunction2()
        end
    end
})



VisualsTab:AddToggle({
    Name = "ESP (New)",
    Default = false,
    Callback = function(NewValue)
        _G.ESPNew = NewValue
        if NewValue then
            ESPNewFunction()
        end
    end
})

VisualsTab:AddToggle({
    Name = "ESP (Old)",
    Default = false,
    Callback = function(NewValue)
        _G.ESPOld = NewValue
        if NewValue then
            ESPOldFunction()
        end
    end
})

VisualsTab:AddToggle({
    Name = "NameTags",
    Default = false,
    Callback = function(NewValue)
        _G.NameTags = NewValue
        if NewValue then
            NameTagsFunction()
        end
    end
})



GameTab:AddToggle({
	Name = "FPS Booster",
	Default = false,
	Callback = function(NewValue)
		_G.FpsBoost = NewValue
		if NewValue then
		FpsBoostFunction()
		end
	end    
})
